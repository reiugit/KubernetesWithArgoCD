#1. Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app-deployment # Name des Deployments, 
  namespace: my-app-namespace # Namespace des Deployments, muss mit dem Service übereinstimmen
spec:
  replicas: 3 # Anzahl der Replikate
  selector:
    matchLabels: # Selektiert den Pod, der vom Deployment verwaltet wird
      app: my-app-pod # Ziel-Label des Pods
  template: # Pod-Template
    metadata:
      labels: # Label des Pods, um den Pod selektieren zu können im Deployment und im Service
        app: my-app-pod # Label des Pods
    spec:
      containers: # Container-Definition innerhalb des Pods
      - name: my-app-container # Name des Containers
        image: my-app-image:latest # Image des Containers
        ports:
        - containerPort: 8080 # Port des Containers

#2. Service

apiVersion: v1
kind: Service # Service macht den Pod über eine Netzwerkverbindung zugänglich
metadata:
  name: my-app-service # Name des Services
  namespace: my-app-namespace # Namespace des Services, muss mit dem Deployment übereinstimmen
spec: # Service-Definition
  selector: # Selektiert den Ziel-Pod
    app: my-app-pod # Label des Ziel-Pods
  ports: # Port-Definition
  - protocol: TCP # Protokoll des Services, z.B. TCP oder UDP
    port: 80 # Port des Services nach außen
    targetPort: 8080 # Port des Ziel-Containers
  type: LoadBalancer # Typ des Services, um externe Zugriffe zu ermöglichen
